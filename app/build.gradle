apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.king.practices"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    tasks.whenTaskAdded { task ->
//        if (task.name.contains("lint")
////如果instant run不生效，把clean这行干掉
//                || task.name.equals("clean")
//                //如果项目中有用到aidl则不可以舍弃这个任务
//                || task.name.contains("Aidl")
////用不到测试的时候就可以先关闭
//                || task.name.contains("mockableAndroidJar")
//                || task.name.contains("UnitTest")
//                || task.name.contains("AndroidTest")
////用不到NDK和JNI的也关闭掉
//                || task.name.contains("Ndk")
//                || task.name.contains("Jni")
//        ) {
//            task.enabled = false
//        }
//    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']// //添加创建java-gen目录
        }
    }
    // 配置GreenDao基本参数
    greendao {
        schemaVersion 1 //当前数据库版本
        targetGenDir 'src/main/java-gen' //greendao生成的文件所在目录
        daoPackage 'com.king.practices.greendao' //greendao生成的文件所在目录包名
    }

}

buildscript {
    repositories {
        jcenter()
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile rootProject.ext.dependencies["junit"]
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["cardview-v7"]
//    compile "cn.bmob.android:bmob-sdk:3.5.7"
    provided rootProject.ext.dependencies["javax.annotation"]
    compile rootProject.ext.dependencies["progressmanager"]
    compile rootProject.ext.dependencies["retrofit-url-manager"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
//    view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
        exclude module: 'butterknife-annotations'
    }
    compile rootProject.ext.dependencies["brvah"]
    compile rootProject.ext.dependencies["smartrefresh"]
    compile 'me.jessyan:arms:2.2.0'
    compile 'org.greenrobot:greendao:3.1.1'
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]
}
